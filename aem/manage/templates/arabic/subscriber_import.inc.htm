<script>

{*jsvar var=$responders name='responders'*}
{jsvar var=$offeroptin name='offerOptIn'}
{jsvar var=$offeroptout name='offerOptOut'}
{jsvar var=$offerresponders name='offerResponders'}
{jsvar var=$offersentresponders name='offerSentResponders'}

{literal}

function ihook_adesk_sync_destinations_template(data) {
  if (data.sendresponder) {
	$("sendresponderOn").checked = true;
  } else {
	$("sendresponderOff").checked = true;
  }

  $('destinationField').value = data.destination;

  $("instantresponderOn").checked              = data.instantresponder ? true : false;
  $("import_option_field_delete_all").checked  = data.delete_all ? true : false;
  //$("import_option_field_skipbounced").checked = data.skipbounced ? true : false;
  $("import_option_field_updateexisting").checked   = data.updateexisting ? true : false;
  $("import_option_field_lastmessage").checked = data.lastmessage ? true : false;

  if (data.sentresponders != "") {
	var sent = data.sentresponders.toString().split(",");
	$("sentresponders").checked = false;

	for (var i = 0; i < sent.length; i++) {
	  if (!$("sentresponders").checked) {
		$("sentresponders").checked = true;
		$("sentrespondersbox").className = "adesk_block";
	  }

	  $("sentresponder" + sent[i].toString()).selected = true;
	}
  }
}

function ihook_import_relid_change(newval) {
	if ( typeof(newval.join) == 'function' ) {
		var relval = newval.join(',');
	} else {
		var relval = parseInt(newval, 10);
	}
	var destination = $('destinationField').value;
	if ( destination == 2 ) {
		var statusval = 'unsubscribe';
	} else if ( destination == 1 ) {
		var statusval = 'subscribe';
	} else {
		var statusval = '';
	}
	//if ( relval != '' && relval > 0 ) {
		adesk_ajax_call_cb(apipath, "subscriber_import.import_relid_change", ihook_import_relid_change_cb, relval, statusval);
	//} else {
		// if resetting...
	//}
}

function ihook_import_relid_change_cb(xml) {
	var ary = adesk_dom_read_node(xml);
	var value = $('destinationField').value;
	// handle responders
	//responders = ary.responders;
	adesk_dom_remove_children($('sentRespondersField'));
	for ( var i in ary.responders ) {
		var r = ary.responders[i];
		if ( typeof r != 'function' ) {
			$('sentRespondersField').appendChild(
				Builder.node(
					'option',
					{ value: r.id },
					[ Builder._text(r.name) ]
				)
			);
		}
	}
	$('sentRespondersField').selectedIndex = -1;
	// set vars
	offerResponders = ary.offerresponders;
	offerSentResponders = ary.offersentresponders;
	offerOptIn = ary.offeroptin;
	offerOptOut = ary.offeroptout;
	import_destination_setstage(value);
}

function import_destination_change(value) {
	if ( value == 0 ) { // unconfirmed
		//
	} else if ( value == 1 ) { // active
		//
	} else if ( value == 2 ) { // unsubscribed
		//
	} else if ( value == 3 ) { // exclusion
		//
	}
	import_destination_setstage(value);
	ihook_import_relid_change(adesk_form_select_extract($('relidField')));
}

function import_destination_setstage(value) {
	// handle autoresponder options
	$('importResponderOptions').className = ( value != 0 && value != 3 && offerResponders == 1 ) ? 'adesk_block' : 'adesk_hidden';
	$('responderOptions').className = ( value != 0 && value != 3 && offerSentResponders > 0 ) ? 'adesk_block' : 'adesk_hidden';
	// handle options checkboxes
	if ( $('importOption_optin') ) $('importOption_optin').className = ( value == 0 && offerOptIn == 1 ) ? 'adesk_block' : 'adesk_hidden';
	if ( $('importOption_optout') ) $('importOption_optout').className = ( value == 2 && offerOptOut == 1 ) ? 'adesk_block' : 'adesk_hidden';
	//if ( $('importOption_skipbounced') ) $('importOption_skipbounced').className = ( value != 3 && value != 2 ) ? 'adesk_block' : 'adesk_hidden';
	if ( $('importOption_updateexisting') ) $('importOption_updateexisting').className = ( value != 2 && value != 3 ) ? 'adesk_block' : 'adesk_hidden';
	if ( $('importOption_lastmessage') ) $('importOption_lastmessage').className = ( value == 1 ) ? 'adesk_block' : 'adesk_hidden';
	// for sync too (this include template is used there too)
	if ( $('syncOption_optin') ) $('syncOption_optin').className = ( value == 0 && offerOptIn == 1 ) ? 'adesk_block' : 'adesk_hidden';
	if ( $('syncOption_optout') ) $('syncOption_optout').className = ( value == 2 && offerOptOut == 1 ) ? 'adesk_block' : 'adesk_hidden';
}

// now assign defined ihooks
adesk_ihook_define('ihook_import_relid_change', ihook_import_relid_change);
adesk_ihook_define('adesk_sync_destinations_template', ihook_adesk_sync_destinations_template);

{/literal}
</script>

<div id="importDestinations">
	<h3>{"Import As"|alang}</h3>
	<div>
		<select name="destination" id="destinationField" size="1" onchange="import_destination_change(this.value);">
{if !$__ishosted}
			<option value="0"{if $admin.optinconfirm} selected="selected"{/if}>{"Unconfirmed"|alang}</option>
{/if}
{if !$admin.optinconfirm}
			<option value="1" selected="selected">{"Active"|alang}</option>
{/if}
			<option value="2">{"Unsubscribed"|alang}</option>

			<option value="3">{"Excluded"|alang}</option>

{*
			<option value="4">{"Globally Excluded"|alang}</option>
*}
		</select>
	</div>
</div>

<div id="importResponderOptions" class="{if !$admin.optinconfirm and $offerresponders}adesk_block{else}adesk_hidden{/if}">
	<h3>{"Autoresponder Options"|alang}</h3>
	<div id="globalResponderOn">
		<div>
			<label>
				<input type="radio" name="sendresponder" value="1" id="sendresponderOn" checked="checked" onclick="if ( offerSentResponders ) $('responderOptions').className = 'adesk_block';" />
				{"Send Autoresponders to these subscribers"|alang}
			</label>
			{"Subscribers will be treated the same as any person that subscribed from a public side or a subscription form; all instant and/or delayed AutoResponders will be sent to them in due time."|help}
		</div>
		<div id="responderOptions" class="{if $offersentresponders}adesk_block{else}adesk_hidden{/if}">
			<div>
				<label>
					<input type="checkbox" name="instantresponder" value="1" id="instantresponderOn" />
					{"Send instant autoresponders when importing"|alang}
				</label>
				{"During importing the subscribers, they will be sent any instant AutoResponders you might have setup."|help}
			</div>
			<hr size="1" width="100%" noshade />
			<div>
				<label>
					<input id="sentresponders" type="checkbox" value="1" onclick="$('sentrespondersbox').className = ( this.checked ? 'adesk_block' : 'adesk_hidden' );" />
					{"Set specific auto-responders as being already sent"|alang}
				</label>
				{"You can flag certain AutoResponders as already been sent to these subscribers, in case imported subscribers shouldn't receive some of them."|help}
			</div>
			<div id="sentrespondersbox" class="adesk_hidden">
				{"Select the autoresponders that should be marked as 'sent' for these subscribers. Those will not be sent."|alang}<br />
				{"If you do not select any autoresponders they will receive all autoresponders that regular subscriber would."|alang}<br />
				<select name="sentresponders[]" size="10" id="sentRespondersField" multiple="multiple">
{foreach from=$responders item=r}
				  <option id="sentresponder{$r.id}" value="{$r.id}">{$r.name|escape}</option>
{/foreach}
				</select>
				{"Notice: Hold CTRL to select multiple Autoresponders."|help}
				<div>
					{"Select:"|alang}
					<a href="#" onclick="return adesk_form_select_multiple_all($('sentRespondersField'));">{"All"|alang}</a>
					&middot;
					<a href="#" onclick="return adesk_form_select_multiple_none($('sentRespondersField'));">{"None"|alang}</a>
				</div>
			</div>
		</div>
	</div>
	<div id="globalResponderOff">
		<div>
			<label>
				<input type="radio" name="sendresponder" value="0" id="sendresponderOff" onclick="if ( offerSentResponders ) $('responderOptions').className = 'adesk_hidden';" />
				{"Never send any Autoresponders to these subscribers"|alang}
			</label>
			{"These subscribers will never receive any further AutoResponders setup in the system."|help}
		</div>
	</div>
</div>
