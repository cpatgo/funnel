<array>
    <content><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Email Template - retro green</title>
<style type="text/css">
.case { background: #353732 url('images/retrogreen/body-bg.jpg'); }
</style>
<!--[if gte mso 9]>
<style type="text/css">
.body{background: #353732 url('images/retrogreen/body-bg.jpg');}	     
.case { background:none;}
</style>
<![endif]-->
</head>
<body class="body" style="margin: 0; background-color: #353732; background-image: url(images/retrogreen/body-bg.jpg); background-repeat: repeat;" marginheight="0" topmargin="0" marginwidth="0" leftmargin="0">
<!--100% body table-->
<table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
        <td class="case" style="background-color: #353732; background-image: url(images/retrogreen/body-bg.jpg); background-repeat: repeat;">
            <!--[if gte mso 9]>
<td style="background: none;">
<![endif]-->
            <!--header text-->
            <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td style="background-image: url(images/retrogreen/header-bg.jpg); background-repeat: repeat;" background="images/retrogreen/header-bg.jpg" valign="middle" align="center" height="59" bgcolor="#c8be9a">
                        <table width="620" border="0" align="center" cellpadding="0" cellspacing="0">
                            <tr>
                                <td>
                                    <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #fff;">You're receiving this newsletter because you signed up for it or bought widgets from us.
                                        Having trouble reading this email?
                                        <webversion style="color: #fff; text-decoration: underline;" href="#"><a href="%WEBCOPY%">View it in your browser</a>.</webversion>
                                        Not interested anymore?
                                        <unsubscribe style="color: #fff; text-decoration: underline;" href="#"><a href="%UNSUBSCRIBELINK%">Unsubscribe</a> Instantly.</unsubscribe>
                                    </p>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
            <!--/header text-->
            <!--masthead-->
            <table style="background-image:url(images/retrogreen/masthead-bg.jpg); background-repeat:repeat; background-color:#7a8b7c;" background="images/retrogreen/masthead-bg.jpg" bgcolor="#7a8b7c" width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
        <td>
            <table id="masthead" style="background-image:url(images/retrogreen/masthead-bg.jpg); background-repeat:repeat; background-color:#7a8b7c;" background="images/retrogreen/masthead-bg.jpg" bgcolor="#7a8b7c" width="1000" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td valign="top" height="179">
                        <table border="0" align="left" cellpadding="0" cellspacing="0">
                            <tr>
                                <td valign="top" width="197" height="177">&nbsp;</td>
                            </tr>
                        </table>
                        <table width="153" border="0" align="left" cellpadding="0" cellspacing="0">
                            <tr>
                                <td valign="top" width="180" height="15"> </td>
                            </tr>
                            <tr>
                                <td valign="top" height="148" background="images/retrogreen/date-bg.jpg" bgcolor="#6a7b6e" style="margin:0px; padding:0px; background-image:url(images/retrogreen/date-bg.jpg); background-repeat: no-repeat; background-position: top; background-color: #6a7b6e;">
                                    <table width="153" border="0" align="left" cellpadding="0" cellspacing="0">
                                        <tr>
                                            <td height="42"></td>
                                        </tr>
                                        <tr>
                                            <td valign="top" align="center">
                                                <p style="font-size: 20px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #ffffff;">
                                                    <currentmonth>
                                                </p>
                                                <p style="font-size: 20px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #ffffff;">Newsletter</p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign="top"></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        <table width="575" border="0" align="right" cellpadding="0" cellspacing="0">
                            <tr>
                                <td valign="top" width="445" height="55">&nbsp;</td>
                                <td valign="top" width="445" height="55">&nbsp;</td>
                            </tr>
                            <tr>
                                <td valign="top">
                                    <h1 style="font-family: Georgia, 'Times New Roman', Times, serif; font-size: 48px; color: #FFF; margin:0px; padding:0px;">ABC Widgets</h1>
                                </td>
                                <td valign="top">&nbsp;</td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
            </td>
    </tr>
</table>
            <!--/masthead-->
            <!--top intro-->
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="35">&nbsp;</td>
                </tr>
            </table>
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td valign="top" width="220">
                        <table width="205" border="0" cellspacing="0" cellpadding="0">
                            <tr>
                                <td valign="top" width="220">
                                    <p style="color: #dac782; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; font-weight: bold;">IN THIS ISSUE</p>
                                    <br>
                                    <table width="100%" border="0" cellspacing="0" cellpadding="0">
                                        <tr>
                                            <td>
                                                <p style="font-size: 13px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #fff; float: left;"><img src="images/retrogreen/li.gif" height="11" width="18">Lorem ipsum dolor sit</p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>&nbsp;</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <p style="font-size: 13px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #fff; float: left;"><img src="images/retrogreen/li.gif" height="11" width="18">Lorem ipsum dolor sit</p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>&nbsp;</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <p style="font-size: 13px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #fff; float: left;"><img src="images/retrogreen/li.gif" height="11" width="18">Lorem ipsum dolor sit</p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>&nbsp;</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <p style="font-size: 13px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #fff; float: left;"><img src="images/retrogreen/li.gif" height="11" width="18">Lorem ipsum dolor sit</p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>&nbsp;</td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td width="385" valign="top">
                        <table style="background-image: url(images/retrogreen/box-bg.jpg); background-repeat: repeat;" background="images/retrogreen/box-bg.jpg" width="100%" border="0" cellspacing="0" cellpadding="20">
                            <tr>
                                <td>
                                    <p style="font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #dac782; font-style: italic;">Dear Simon<br>
                                        <br>
                                        Welcome to lorem ipsum dolor sit amet, dolor est consectetuer adipiscing elit. Aliquam molestie quam vitae mi congue tristique. Donec imperdiet accumsa felis. Proin eget mi. Sed at est. Aliquam lectus orci, adipiscing sodales vitae mi.</p>
                                    <br>
                                    <p style="font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin: 0px; padding: 0px; color: #dac782; font-style: italic;">Regards, ABC Widgets</p>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
            <!--/top intro-->
            <!--content section-->
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="25">&nbsp;</td>
                </tr>
            </table>
            <table style="background-image: url(images/retrogreen/box-bg.jpg); background-repeat: repeat;" background="images/retrogreen/box-bg.jpg" width="605" border="0" align="center" cellpadding="20" cellspacing="0">
                <tr>
                    <td valign="top">
                        <h1 style="color: #fff; font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; font-weight: bold;">LOREM IPSUM DOLOR SIT AMET</h1>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Cras purus. Nunc rhoncus. Pellentesque semper. Donec imperdiet accumsan felis. Proin eget mi. Sed at est.</p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Aliquam lectus orci, adipiscing et, sodales acular. Ut dictum velit nec est. Quisque posuere, purus sit amet male suada blandit, sapien <a style="color: #fff; text-decoration: underline;" href="#">sapien auctor</a> arcu. Pellentesque semper. Donec imperdiet accums</p>
                    </td>
                    <td valign="top"> <img style="margin: 0px; padding: 0px; display: block; border:solid 2px #989997;" src="images/retrogreen/img1.jpg" width="265" height="193"></td>
                </tr>
            </table>
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="25">&nbsp;</td>
                </tr>
            </table>
            <!--/content section-->
            <!--content section-->
            <table style="background-image: url(images/retrogreen/box-bg.jpg); background-repeat: repeat;" background="images/retrogreen/box-bg.jpg" width="605" border="0" align="center" cellpadding="20" cellspacing="0">
                <tr>
                    <td valign="top">
                        <h1 style="color: #fff; font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; font-weight: bold;">LOREM IPSUM DOLOR SIT AMET</h1>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Cras purus. Nunc rhoncus. Pellentesque semper. Donec imperdiet accumsan felis. Proin eget mi. Sed at est.</p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Aliquam lectus orci, adipiscing et, sodales acular. Ut dictum velit nec est. Quisque posuere, purus sit amet male suada blandit, <a style="color: #fff; text-decoration: underline;" href="#">sapien sapien</a> auctor arcu. Pellentesque semper. Donec imperdiet accums</p>
                    </td>
                    <td valign="top"> <img style="margin: 0px; padding: 0px; display: block; border:solid 2px #989997;" src="images/retrogreen/img2.jpg" width="265" height="193"></td>
                </tr>
            </table>
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="25">&nbsp;</td>
                </tr>
            </table>
            <!--/content section-->
            <!--content section-->
            <table style="background-image: url(images/retrogreen/box-bg.jpg); background-repeat: repeat;" background="images/retrogreen/box-bg.jpg" width="605" border="0" align="center" cellpadding="20" cellspacing="0">
                <tr>
                    <td valign="top">
                        <h1 style="color: #fff; font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; font-weight: bold;">LOREM IPSUM DOLOR SIT AMET</h1>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Cras purus. Nunc rhoncus. Pellentesque semper. Donec imperdiet accumsan felis. Proin eget mi. Sed at est.</p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782;">Aliquam <a style="color: #fff; text-decoration: underline;" href="#">lectus orci</a>, adipiscing et, sodales acular. Ut dictum velit nec est. Quisque posuere, purus sit amet male suada blandit, sapien sapien auctor arcu. Pellentesque semper. Donec imperdiet accums</p>
                    </td>
                    <td valign="top"> <img style="margin: 0px; padding: 0px; display: block; border:solid 2px #989997;" src="images/retrogreen/img3.jpg" width="265" height="193"></td>
                </tr>
            </table>
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="25">&nbsp;</td>
                </tr>
            </table>
            <!--/content section-->
            <!--footer-->
            <table width="605" border="0" align="center" cellpadding="20" cellspacing="0">
                <tr>
                    <td valign="top">
                        <p style="font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782; font-weight: bold; font-style:italic;">Forward this issue</p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #6d9a83;">Do you know someone who might be interested in receiving this monthly newsletter?</p>
                        <!--button-->
                        <table width="160" border="0" cellspacing="0" cellpadding="10">
                            <tr>
                                <td style="border-radius: 6px; -moz-border-radius: 6px; -webkit-border-radius: 6px; -khtml-border-radius: 6px; font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; color: #ffffff; margin: 0; padding: 0; text-align: center;" height="28" bgcolor="#232723">
                                    <forwardtoafriend style="text-decoration: none; color: #fff;"><a href="%FORWARD2FRIEND%">Forward</a></forwardtoafriend>
                                </td>
                            </tr>
                        </table>
                        <!--/button-->
                    </td>
                    <td valign="top">
                        <p style="font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782; font-weight: bold; font-style:italic;"><a href="%UNSUBSCRIBELINK%">Unsubscribe</a></p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #6d9a83;">You're receiving this newsletter because you signed up for the ABC Widget Newsletter.</p>
                        <!--button-->
                        <table width="160" border="0" cellspacing="0" cellpadding="10">
                            <tr>
                                <td style="border-radius: 6px; -moz-border-radius: 6px; -webkit-border-radius: 6px; -khtml-border-radius: 6px; font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; color: #ffffff; margin: 0; padding: 0; text-align: center;" height="28" bgcolor="#232723">
                                    <unsubscribe style="text-decoration: none; color: #fff;"><a href="%UNSUBSCRIBELINK%">Unsubscribe</a></unsubscribe>
                                </td>
                            </tr>
                        </table>
                        <!--/button-->
                    </td>
                    <td valign="top">
                        <p style="font-size: 16px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #dac782; font-weight: bold; font-style:italic;">Contact us</p>
                        <p style="font-size: 12px; font-family: Georgia, 'Times New Roman', Times, serif; margin-bottom: 10px; padding: 0px; color: #6d9a83;">123 Some Street<br>
                            City, State<br>
                            99999<br>
                            (147) 789 7745<br>
                            <a style="color: #fff; text-decoration: underline;" href="#">www.abcwidgets.com</a><br>
                            <a style="color: #fff; text-decoration: underline;" href="#">info@abcwidgets.com</a></p>
                    </td>
                </tr>
            </table>
            <!--footer-->
            <table width="605" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td height="25">&nbsp;</td>
                </tr>
            </table>
            <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
                <tr>
                    <td background="images/retrogreen/footer.jpg" valign="top" height="59"><img style="margin: 0; padding: 0; display: block;" src="images/retrogreen/footer.jpg" width="1000" height="59"></td>
                </tr>
            </table>
        </td>
    </tr>
</table>
<!--/100% body table-->
</body>
</html></content>
    <images />
    <tags />
    <categoryid>1</categoryid>
    <preview_mime />
    <preview_data />
    <directory>b06c99ecd2</directory>
</array>